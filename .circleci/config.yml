version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8.5
    
    working_directory: ~/repo
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          - v2-dependencies-

      - run:
          name: Install pandoc
          command: |
                    sudo apt-get update 
                    wget https://github.com/jgm/pandoc/releases/download/2.11.2/pandoc-2.11.2-1-amd64.deb
                    sudo dpkg -i pandoc-2.11.2-1-amd64.deb
          
      - run:
          name: Install cmake
          command: |
                    sudo apt-get install -y cmake

      - run:
          name: Install 7z
          command: |
                    sudo apt-get install -y p7zip-full
          
      - run:
          name: Install InkScape
          command: |
                    sudo apt-get install -y inkscape
          
      - run:
          name: Install graphviz
          command: |
                    sudo apt-get install -y graphviz

      - run:
          name: install ffmpeg
          command: |
                    sudo apt-get install ffmpeg

      - run:
          name: Install cython
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install cython

      - run:
          name: Install gdal
          command: |
            sudo apt-get install -y python-gdal gdal-bin libc6

      - run:
          name: Install pyproj for cartopy
          command: |
            sudo apt-get install -y libproj-dev proj-bin proj-data libgeos-dev python-gdal gdal-bin
            python3 -m venv venv
            . venv/bin/activate
            pip install pyproj

      - run:
          name: Install pygame
          command: |
                    sudo apt-get install libasound2-dev
                    sudo apt-get install libx11-dev
                    sudo apt-get -y install xvfb pulseaudio
                    sudo apt-get install -y python-pygame

      - run:
          name: Install hdf5 (1)
          command: |
            sudo apt-get install libhdf5-dev libblosc-dev liblzo2-dev

      # statsmodels setup.py requires it
      - run:
          name: install numpy
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install numpy

      # skimage setup.py requires it
      - run:
          name: install cython
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install cython

      - run:
          name: install dependencies (1) - requirements_conda
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements_conda.txt
            
      - run:
          name: install dependencies (2) - requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            
      - run:
          name: install dependencies (2) - cairo
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install cairocffi cairosvg
            
      - run:
          name: install dependencies (3) - sphinxcontrib, datashader, pyPDF
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install git+https://github.com/bokeh/datashader.git --upgrade --no-deps
            pip install git+https://github.com/sdpython/pyPdf --upgrade --no-deps
            
      - run:
          name: install dependencies (4) - pygame
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pygame==2.0.0.dev10
            
      - run:
          name: install dependencies (5) - fairtest
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install https://github.com/sdpython/fairtest/releases/download/0.1/fairtest-0.1-py3-none-any.whl
            
      - run:
          name: pip freeze
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip freeze

      - run:
          name: Install tex
          command: |
                    sudo apt-get install -y texlive
                    sudo apt-get install -y texlive-latex-extra
                    sudo apt-get install -y texlive-lang-french
                    sudo apt-get install -y texlive-xetex
                    sudo apt-get install -y dvipng
          
      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            export AUDIODEV=null
            export SDL_VIDEODRIVER=dummy
            export SDL_AUDIODRIVER=disk
            export DISPLAY=localhost:0.0
            export PYTHONPATH=src
            python setup.py unittests

      - run:
          name: wheel
          command: |
            . venv/bin/activate
            export PYTHONPATH=src
            python setup.py bdist_wheel
            mkdir -p test-reports/dist
            cp dist/*.whl test-reports/dist

      - run:
          name: documentation
          command: |
            . venv/bin/activate
            export PYTHONPATH=src
            echo SKIPPED
            # python setup.py build_sphinx html1 nblight
            
      - run:
          name: copy documentation
          command: |
            echo SKIPPED
            # mkdir -p test-reports/doc
            # zip -r -9  test-reports/doc/documentation_html.zip _doc/sphinxdoc/build/html
            
      - store_artifacts:
          path: test-reports
          destination: test-reports