
language: python

python:
  - { PATH: "{{replace(Python39, '\\', '\\\\')}}", VERSION: 3.9, DIST: std, PYTHONPATH: src }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("%NAME_JENKINS%", project_name + "_%VERSION%_%DIST%_%NAME%"), "_venv")}}
  
install:
  - pip install --upgrade pip
  - pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ pyquickhelper tkinterquickhelper pyensae pymmails pymyinstall pyrsslocal mlstatpy mlinsights jyquickhelper manydataapi --upgrade
  - pip install -r requirements.txt
  - if exist _venv\lib\site-packages\enum\__init__.py pip uninstall -y enum34
  - pip freeze
  - pip freeze > pip_freeze.txt
before_script:
  - python -u setup.py try_import
  - set KERAS_BACKEND=tensorflow
  - set PYTHONPATH=src
script:
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -g \".*((http)|(SKIP)|(LONG)|(GUI)|(cvxopt)|(theano)).*\"", NAME: "UT", TIMEOUT: 3600 }  # timeout is 3600 for the documentation
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e \".*(http).*\"", NAME: "UT_HTTP" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*LONG.* -g .*((internet)|(cvxopt)|(notebook_eleves)).*", NAME: "UT_LONG", TIMEOUT: 3600 }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*SKIP.* -g \".*((theano)|(keras)|(deep)|(scraping)|(pythonnet)|(huge)|(web)|(ete3)|(cvxopt)|(students)).*\"", NAME: "UT_SKIP" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*_1A_.* -g \".*((SKIP)|(theano)|(keras)|(scraping)|(ete3)|(cvxopt)).*\"", NAME: "UT_1A" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*_2A_.* -g \".*((SKIP)|(theano)|(keras)|(scraping)|(ete3)|(cvxopt)).*\"", NAME: "UT_2A", TIMEOUT: 3600 }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*_3A_.* -g \".*((SKIP)|(theano)|(keras)|(scraping)|(ete3)|(cvxopt)).*\"", NAME: "UT_3A" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*_EX_.* -g \".*((SKIP)|(theano)|(keras)|(scraping)|(ete3)|(cvxopt)).*\"", NAME: "UT_EX", TIMEOUT: 3600 }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*_GUI_.* -g \".*((SKIP)|(theano)|(keras)|(scraping)|(ete3)|(cvxopt)).*\"", NAME: "UT_GUI", TIMEOUT: 2400 }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e .*scraping.* -g \".*((SKIP)|(theano)|(keras)|(ete3)|(cvxopt)).*\"", NAME: "UT_SCRAPING", TIMEOUT: 3600 }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e \".*((huge)).*\"", NAME: "UT_HUGE" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e \".*cvxopt.*\"", NAME: "UT_CVXOPT" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e \".*notebook_eleves.*\"", NAME: "UT_NBELEVE" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e \".*students.*\"", NAME: "UT_STUDENTS" }
  - { CMD: "python -X faulthandler -X showrefcount -u setup.py unittests -e \".*internet.*\"", NAME: "UT_INTERNET" }
  - if [ ${VERSION} == "3.9" and ${DIST} == "std" ]
      then 
        --CMD=echo skip unit test;;
        --NAME=DOC1;;
        --CLEAN=0;;
        --TIMEOUT=5400;;
      fi
  - if [ ${VERSION} == "3.9" and ${DIST} == "std" ]
      then 
        --CMD=echo skip unit test;;
        --NAME=DOC3;;
        --CLEAN=0;;
        --TIMEOUT=5400;;
      fi
after_script:
  - python -u setup.py bdist_wheel
  - if [ ${NAME} == "UT" ] then copy dist\*.whl {{root_path}}\..\..\local_pypi\local_pypi_server fi
documentation:
  - if [ ${NAME} == "UT" ] then python -u setup.py build_sphinx html1 fi
  - if [ ${NAME} == "UT" ] then python -u setup.py build_sphinx html3 fi
  - if [ ${NAME} == "UT" ] then xcopy /E /C /I /Y _doc\sphinxdoc\build\html dist\html fi
  - if [ ${NAME} == "UT" ] then xcopy /E /C /I /Y _doc\sphinxdoc\build3\html dist\html3 fi
  - if [ ${NAME} == "DOC1" ] then python -u setup.py build_sphinx html1 fi
  - if [ ${NAME} == "DOC3" ] then python -u setup.py build_sphinx html3 fi
  - if [ ${NAME} == "DOC1" ] then xcopy /E /C /I /Y _doc\sphinxdoc\build\html dist\html fi
  - if [ ${NAME} == "DOC3" ] then xcopy /E /C /I /Y _doc\sphinxdoc\build3\html dist\html3 fi
